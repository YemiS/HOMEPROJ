version: 2
references:
  defaults: &defaults
      working_directory: ~/YemiS
      docker:
        - image: circleci/node:8.10
jobs:
  build:
    <<: *defaults
    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run:
          name: Install Serverless CLI and dependencies
          command: |
            sudo npm i -g serverless
            npm install
            sudo apt-get install awscli

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-
        
      # run tests!
  test:
     <<: *defaults
     steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies- 
      - run:   
          name: Run tests with coverage
          command: npm test --coverage

  deploydev:
     <<: *defaults 
     steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies- 
      - run:  
          name: Deploy application
          command: sls deploy --stage dev

  deployprod:
      <<: *defaults
      steps:
       - checkout

      # Download and cache dependencies
       - restore_cache:
           keys:
           - v1-dependencies-
          # fallback to using the latest cache if no exact match is found
           - v1-dependencies- 
       - run:
           name: Deploy application
           command: |
              aws configure set aws_access_key_id ${DEV_KEY} --profile yemihomedev
              aws configure set aws_secret_access_key ${DEV_SECRET} --profile yemihomedev
              aws configure set role_arn ${PROD_KEY} --profile yemihome
              aws configure set source_profile ${BRANCH_PROFILE} --profile yemihome
              chmod +x scripts/aws-crossenv-role.sh
              source scripts/aws-crossenv-role.sh
              sls deploy --stage prod
workflows:
  version: 2
  build_and_test:
    jobs:
      - build
      - test: 
          requires:
            - build
      - deploydev:
          requires:
            - test
          filters:
            branches:
              only: control-deploy
      - deployprod:
          requires:
            - test
          filters:
            branches:
              only: master
